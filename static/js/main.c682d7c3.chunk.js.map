{"version":3,"sources":["components/ShortUrlForm.js","components/App.js","components/reportWebVitals.js","index.js"],"names":["ShortUrlForm","value","onChange","onSubmit","className","id","name","type","placeholder","autoComplete","size","required","onClick","App","useState","longURL","setLongURL","shortURL","setShortURL","isLoading","setIsLoading","error","setError","a","console","log","axios","post","url","headers","data","event","target","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA6BeA,MA7Bf,YAAoD,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SACpC,OACI,sBAAKC,UAAU,OAAf,UACA,qBAAKC,GAAG,gBAAR,SACI,wOAEJ,uBAAMC,KAAK,WAAWD,GAAG,WAAzB,UACI,uBAAOA,GAAG,MACVJ,MAAOA,EACPC,SAAUA,EACVK,KAAK,OACLD,KAAK,MACLE,YAAY,kFACZC,aAAa,MACbC,KAAK,KACLC,UAAQ,IACR,uBAAON,GAAG,SAASE,KAAK,SAASN,MAAM,yDAAYW,QAAST,W,iBCqCzDU,MA/Cf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KALa,4CAOb,8BAAAC,EAAA,sEAGIC,QAAQC,IAAIV,GAHhB,SAI2BW,IAAMC,KAAK,+BAAgC,CAChEC,IAAKb,GACJ,CACDc,QAAS,CACP,eAAgB,uCARxB,iBAIYC,EAJZ,EAIYA,MAQDF,IAAKV,EAAYY,EAAKF,KACpBE,EAAKT,OAAOC,EAASQ,EAAKT,OAbvC,gDAeIC,EAAS,qKAfb,yBAiBIF,GAAa,GAjBjB,6EAPa,sBAgCb,OACE,sBAAKhB,UAAU,UAAf,UACE,cAAC,EAAD,CAAcH,MAAOc,EAASb,SANlC,SAAsB6B,GACpBf,EAAWe,EAAMC,OAAO/B,QAKgCE,SAlC7C,6CAmCRgB,EAAY,+JAGX,qCACCE,GAAS,qBAAKjB,UAAU,QAAf,SAAwBiB,IACjCJ,GAAY,mBAAGgB,KAAMhB,EAAT,SAAoBA,WClC1BiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c682d7c3.chunk.js","sourcesContent":["function ShortUrlForm({value, onChange, onSubmit}) {\r\n    return(\r\n        <div className=\"form\">\r\n        <div id=\"messegeResult\">\r\n            <p> Введите ссылку требующую сокращения:</p>\r\n        </div>\r\n        <form name=\"formMain\" id=\"formMain\" >\r\n            <input id=\"url\"\r\n            value={value}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"url\"\r\n            placeholder=\"Вставьте здесь\"\r\n            autoComplete=\"off\"\r\n            size=\"50\"\r\n            required />\r\n            <input id=\"button\" type=\"button\" value=\"Сократить\" onClick={onSubmit} />\r\n            {/* <p className=\"check-n-label\">\r\n            <input id=\"check\" type=\"checkbox\" name=\"check\" onChange={onCheckboxChanged} id=\"alonecheck\" />\r\n            <label htmlFor=\"alonecheck\">Ввести краткую ссылку самостоятельно:</label>\r\n            </p>\r\n            <div id=\"visible\">\r\n            <input id=\"shorturl\" type=\"url\" name=\"shorturl\" size=\"50\" />\r\n            </div> */}\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShortUrlForm;","// import UseRequest from './Request';\r\n// import OnCheckboxChanged from './CheckBox';\r\nimport {useState} from \"react\";\r\nimport ShortUrlForm from \"./ShortUrlForm\";\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [longURL, setLongURL] = useState('');\r\n\r\n  const [shortURL, setShortURL] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  async function handleSubmit() {\r\n    // const urlResponse = '/api/form.php';\r\n    try {\r\n      console.log(longURL);\r\n      const { data } = await axios.post('/api/form.php', {\r\n        url: longURL\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      });\r\n\r\n    if (data.url) setShortURL(data.url);\r\n      else if (data.error) setError(data.error);\r\n    } catch (error) {\r\n      setError('Пожалуйста, попробуйте еще раз.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  function handleChange(event) {\r\n    setLongURL(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <ShortUrlForm value={longURL} onChange={handleChange} onSubmit={handleSubmit} />\r\n      {isLoading ? <div>\r\n        Результат загружается...\r\n      </div> : (\r\n        <>\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {shortURL && <a href={shortURL}>{shortURL}</a>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.sass';\nimport App from './components/App';\nimport reportWebVitals from './components/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}